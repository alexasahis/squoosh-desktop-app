{"version":3,"sources":["webpack:///./codecs/webp_dec/webp_dec.js","webpack:///./codecs/webp_dec/webp_dec.wasm","webpack:///./src/codecs/webp/decoder.ts"],"names":["webp_dec","_scriptDir","document","currentScript","src","undefined","key","Module","moduleOverrides","hasOwnProperty","status","toThrow","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","window","importScripts","nodeFS","nodePath","scriptDirectory","__dirname","filename","binary","ret","__webpack_require__","e","Error","code","toString","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","arguments","quit","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","title","out","console","log","bind","print","err","printErr","warn","STACK_ALIGN","alignMemory","size","factor","Math","ceil","asm2wasmImports","f64-rem","x","y","debugger","ABORT","Array","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","endPtr","subarray","decode","u0","u1","u2","u3","u4","str","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","STATICTOP","STACK_BASE","STACKTOP","DYNAMIC_BASE","DYNAMICTOP_PTR","MIN_TOTAL_MEMORY","alignUp","multiple","updateGlobalBuffer","buf","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","Function","prototype","call","Object","getOwnPropertyDescriptor","ArrayBuffer","get","byteLength","TOTAL_STACK","TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","func","arg","WebAssembly","Memory","initial","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","addOnPreRun","cb","unshift","addOnPostRun","runDependencies","runDependencyWatcher","dependenciesFulfilled","dataURIPrefix","isDataURI","startsWith","wasmBinaryFile","path","locateFile","info","global","env","asm2wasm","parent","exports","getBinary","createWasm","providedBuffer","receiveInstance","instance","module","memory","newBuffer","oldBuffer","oldView","set","mergeMemory","id","clearInterval","removeRunDependency","NaN","Infinity","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","Promise","resolve","reject","credentials","then","catch","instantiate","reason","instantiateStreaming","oldSize","grow","wasmReallocBuffer","TABLE_SIZE","MAX_TABLE_SIZE","Table","maximum","element","integrateWasmJS","STATIC_BASE","push","__GLOBAL__sub_I_webp_dec_cpp","__GLOBAL__sub_I_bind_cpp","SYSCALLS","buffers","printChar","stream","curr","varargs","getStr","t","hasUtf","i","apply","min","Pointer_stringify","get64","low","high","getZero","getShiftFromSize","TypeError","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","charCodeAt","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","message","this","stack","create","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","forEach","type","unregisteredTypes","registered","dt","rawType","registeredInstance","options","ignoreDuplicateRegistrations","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","shallowCopyInternalPointer","o","count","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","obj","handle","getInstanceTypeName","ClassHandle_clone","value","clone","getPrototypeOf","ClassHandle_delete","rawDestructor","runDestructor","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","pop","ClassHandle_deleteLater","registeredPointers","exposePublicSymbol","numArguments","overloadTable","proto","methodName","humanName","prevFunc","argCount","ensureOverloadTable","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","rv","k","setDelayFunction","fn","getInheritedInstance","class_","getBasestPointer","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","downcastPointer","RegisteredPointer","destructorFunction","replacePublicSymbol","embind__requireFunction","signature","rawFunction","fp","FUNCTION_TABLE","dc","dynCall","args","join","makeDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","map","runDestructors","del","validateThis","this_","classType","emval_free_list","emval_handle_array","__emval_decref","refcount","count_emval_handles","get_first_emval","v","floatReadValueFromPointer","craftInvokerFunction","argTypes","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","r","new_","integerReadValueFromPointer","signed","PTHREAD_SPECIFIC","PTHREAD_SPECIFIC_NEXT_KEY","ERRNO_CODES","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","EWOULDBLOCK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EDEADLK","ENOLCK","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EDEADLOCK","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","ENOSYS","ENOTEMPTY","ENAMETOOLONG","ELOOP","EOPNOTSUPP","EPFNOSUPPORT","ECONNRESET","ENOBUFS","EAFNOSUPPORT","EPROTOTYPE","ENOTSOCK","ENOPROTOOPT","ESHUTDOWN","ECONNREFUSED","EADDRINUSE","ECONNABORTED","ENETUNREACH","ENETDOWN","ETIMEDOUT","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EALREADY","EDESTADDRREQ","EMSGSIZE","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EADDRNOTAVAIL","ENETRESET","EISCONN","ENOTCONN","ETOOMANYREFS","EUSERS","EDQUOT","ESTALE","ENOTSUP","ENOMEDIUM","EILSEQ","EOVERFLOW","ECANCELED","ENOTRECOVERABLE","EOWNERDEAD","ESTRPIPE","codes","embind_init_charCodes","staticAlloc","asmGlobalArg","asmLibraryArg","E","OLD_TOTAL_MEMORY","max","replacement","A","s","which","getStreamFromFD","offset_low","result","whence","offset","FS","llseek","position","getdents","ErrnoError","errno","h","iov","iovcnt","len","j","q","close","p","trueValue","falseValue","fromWireType","wt","toWireType","argPackAdvance","readValueFromPointer","heap","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","g","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","desc","enumerable","configurable","defineProperty","D","n","rawArgTypesAddr","rawInvoker","firstElement","array","heap32VectorToArray","invokerArgsArray","concat","primitiveType","minRange","maxRange","bitshift","isUnsignedType","d","dataTypeIndex","TA","decodeMemoryView","m","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","a","valueIsOfTypeString","Uint8ClampedArray","u","lengthBytesUTF8","_malloc","outPtr","maxBytesToWrite","outU8Array","outIdx","endIdx","stringToUTF8Array","stringToUTF8","charCode","C","charSize","getHeap","HEAP","start","B","isVoid","l","z","argv","impl","requireRegisteredType","dest","num","w","_pthread_once","b","asm","run","doRun","postRun","preRun","setTimeout","what","JSON","stringify","old","runCaller","__webpack_exports__","_codecs_webp_dec_webp_dec__WEBPACK_IMPORTED_MODULE_0__","_codecs_webp_dec_webp_dec__WEBPACK_IMPORTED_MODULE_0___default","_codecs_webp_dec_webp_dec_wasm__WEBPACK_IMPORTED_MODULE_1__","_codecs_webp_dec_webp_dec_wasm__WEBPACK_IMPORTED_MODULE_1___default","_util__WEBPACK_IMPORTED_MODULE_2__","emscriptenModule","async","rawImage","ImageData","width","height","free_result"],"mappings":"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","file":"process-webp-dec.7bffc.worker.js","sourcesContent":["\nvar webp_dec = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(webp_dec) {\n  webp_dec = webp_dec || {};\n\nvar Module=typeof webp_dec!==\"undefined\"?webp_dec:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",abort);Module[\"quit\"]=(function(status){process[\"exit\"](status)});Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=(function(title){document.title=title})}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;return Math.ceil(size/factor)*factor}var asm2wasmImports={\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})};var functionPointers=new Array(0);var tempRet0=0;var setTempRet0=(function(value){tempRet0=value});var GLOBAL_BASE=1024;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var WASM_PAGE_SIZE=65536;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}function enlargeMemory(){var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module[\"reallocBuffer\"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmBinaryFile=\"webp_dec.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":asm2wasmImports,\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){err(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function createWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){err(\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource,(function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=65536;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;try{var result=Module[\"wasmMemory\"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}});Module[\"reallocBuffer\"]=(function(size){return wasmReallocBuffer(size)});Module[\"asm\"]=(function(global,env,providedBuffer){if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"__memory_base\"]){env[\"__memory_base\"]=Module[\"STATIC_BASE\"]}if(!env[\"__table_base\"]){env[\"__table_base\"]=0}var exports=createWasm(global,env,providedBuffer);return exports})}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+16192;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_webp_dec_cpp()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})});var STATIC_BUMP=16192;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;STATICTOP+=16;var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};var SYSCALLS={buffers:[null,[],[]],printChar:(function(stream,curr){var buffer=SYSCALLS.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register((function(){clonedHandle[\"delete\"]()})));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,(function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])}));whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],(function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,(function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)}));var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]}))}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:(function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])}),enumerable:true,configurable:true};if(setter){desc.set=(function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(function(v){throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],(function(types){var getterReturnType=types[0];var desc={get:(function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))}),enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=(function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]}));return[]}))}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,(function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)}),argCount-1);whenDependentTypesAreResolved([],argTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]}))}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(function(){return lengthBytesUTF8(value)})}else{getLength=(function(){return value.length})}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){Module[\"abort\"]()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;Module[\"wasmTableSize\"]=222;Module[\"wasmMaxTableSize\"]=222;Module.asmGlobalArg={};Module.asmLibraryArg={\"c\":abort,\"E\":enlargeMemory,\"A\":getTotalMemory,\"t\":setTempRet0,\"s\":abortOnCannotGrowMemory,\"i\":___setErrNo,\"r\":___syscall140,\"h\":___syscall146,\"q\":___syscall6,\"p\":__embind_register_bool,\"o\":__embind_register_class,\"g\":__embind_register_class_property,\"D\":__embind_register_emval,\"n\":__embind_register_float,\"f\":__embind_register_function,\"e\":__embind_register_integer,\"d\":__embind_register_memory_view,\"m\":__embind_register_std_string,\"C\":__embind_register_std_wstring,\"B\":__embind_register_void,\"l\":__emval_decref,\"z\":__emval_incref,\"k\":__emval_take_value,\"j\":_abort,\"y\":_emscripten_memcpy_big,\"x\":_pthread_getspecific,\"w\":_pthread_key_create,\"v\":_pthread_once,\"u\":_pthread_setspecific,\"a\":DYNAMICTOP_PTR,\"b\":STACKTOP};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=(function(){return Module[\"asm\"][\"F\"].apply(null,arguments)});var __GLOBAL__sub_I_webp_dec_cpp=Module[\"__GLOBAL__sub_I_webp_dec_cpp\"]=(function(){return Module[\"asm\"][\"G\"].apply(null,arguments)});var ___errno_location=Module[\"___errno_location\"]=(function(){return Module[\"asm\"][\"H\"].apply(null,arguments)});var ___getTypeName=Module[\"___getTypeName\"]=(function(){return Module[\"asm\"][\"I\"].apply(null,arguments)});var _free=Module[\"_free\"]=(function(){return Module[\"asm\"][\"J\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"K\"].apply(null,arguments)});var dynCall_i=Module[\"dynCall_i\"]=(function(){return Module[\"asm\"][\"L\"].apply(null,arguments)});var dynCall_ii=Module[\"dynCall_ii\"]=(function(){return Module[\"asm\"][\"M\"].apply(null,arguments)});var dynCall_iii=Module[\"dynCall_iii\"]=(function(){return Module[\"asm\"][\"N\"].apply(null,arguments)});var dynCall_iiii=Module[\"dynCall_iiii\"]=(function(){return Module[\"asm\"][\"O\"].apply(null,arguments)});var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=(function(){return Module[\"asm\"][\"P\"].apply(null,arguments)});var dynCall_jiiii=Module[\"dynCall_jiiii\"]=(function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)});var dynCall_v=Module[\"dynCall_v\"]=(function(){return Module[\"asm\"][\"R\"].apply(null,arguments)});var dynCall_vi=Module[\"dynCall_vi\"]=(function(){return Module[\"asm\"][\"S\"].apply(null,arguments)});var dynCall_vii=Module[\"dynCall_vii\"]=(function(){return Module[\"asm\"][\"T\"].apply(null,arguments)});var dynCall_viii=Module[\"dynCall_viii\"]=(function(){return Module[\"asm\"][\"U\"].apply(null,arguments)});var dynCall_viiii=Module[\"dynCall_viiii\"]=(function(){return Module[\"asm\"][\"V\"].apply(null,arguments)});var dynCall_viiiii=Module[\"dynCall_viiiii\"]=(function(){return Module[\"asm\"][\"W\"].apply(null,arguments)});var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=(function(){return Module[\"asm\"][\"X\"].apply(null,arguments)});var dynCall_viiiiiiiii=Module[\"dynCall_viiiiiiiii\"]=(function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)});Module[\"asm\"]=asm;Module[\"then\"]=(function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=(function(){if(old)old();func(Module)})}return Module});function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run()\n\n\n\n\n\n  return webp_dec;\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n    module.exports = webp_dec;\n  else if (typeof define === 'function' && define['amd'])\n    define([], function() { return webp_dec; });\n  else if (typeof exports === 'object')\n    exports[\"webp_dec\"] = webp_dec;\n  \n\n/*** EXPORTS FROM exports-loader ***/\n","module.exports = __webpack_public_path__ + \"webp_dec.fa0ab.wasm\";","import webp_dec, { WebPModule } from '../../../codecs/webp_dec/webp_dec';\nimport wasmUrl from '../../../codecs/webp_dec/webp_dec.wasm';\nimport { initEmscriptenModule } from '../util';\n\nlet emscriptenModule: Promise<WebPModule>;\n\nexport async function decode(data: ArrayBuffer): Promise<ImageData> {\n  if (!emscriptenModule) emscriptenModule = initEmscriptenModule(webp_dec, wasmUrl);\n\n  const module = await emscriptenModule;\n  const rawImage = module.decode(data);\n  const result = new ImageData(\n    new Uint8ClampedArray(rawImage.buffer),\n    rawImage.width,\n    rawImage.height,\n  );\n\n  module.free_result();\n  return result;\n}\n"],"sourceRoot":""}