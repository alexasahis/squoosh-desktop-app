{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/codecs/util.ts","webpack:///./node_modules/comlink/comlink.js","webpack:///./src/codecs/processor-worker/index.ts","webpack:///./src/codecs/resize/processor-meta.ts"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","8","__webpack_require__","exports","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","0","1","2","3","4","5","6","7","all","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","initEmscriptenModule","moduleFactory","wasmUrl","noInitialRun","locateFile","url","endsWith","[object Object]","clamp","x","opts","Math","min","max","Number","MIN_VALUE","MAX_VALUE","__webpack_exports__","TRANSFERABLE_TYPES","filter","f","map","uid","floor","random","MAX_SAFE_INTEGER","proxyValueSymbol","throwSymbol","transferHandlers","Map","canHandle","obj","serialize","port1","port2","MessageChannel","expose","deserialize","endpoint","target","isWindow","windowEndpoint","isEndpoint","Error","activateEndpoint","cbProxy","cb","callPath","Proxy","construct","_target","argumentsList","proxy","type","apply","_thisArg","slice","concat","set","_proxy","async","irequest","args","wrapValue","unwrapValue","msg","transferables","id","pingPongMessageCounter","attachMessageHandler","handler","event","data","removeEventListener","detachMessageHandler","assign","postMessage","pingPongMessage","transferableProperties","message","stack","rootObj","that","reduce","propName","iresult","proxyValue","transferHandler","makeInvocationResult","arg","wrappedChildren","item","iterateAllProperties","path","wrappedValue","wrappedChild","has","isRawWrappedValue","wrappedChildValue","join","newValue","replaceValueInObjectAtPath","newVal","lastKey","w","constructor","addEventListener","transfer","isMessagePort","start","every","prop","isTransferable","thing","some","visited","WeakSet","add","ArrayBuffer","isView","keys","mozjpegEncode","options","encode","quantize","process","rotate","resize","method","isHqx","hqx","widthRatio","width","heightRatio","height","ratio","factor","util","ceil","optiPngEncode","compress","webpEncode","webpDecode","decode"],"mappings":"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","file":"processor-worker.be3e7.worker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t8: 1\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(\"\" + ({\"0\":\"process-hqx\",\"1\":\"process-imagequant\",\"2\":\"process-mozjpeg-enc\",\"3\":\"process-optipng\",\"4\":\"process-resize\",\"5\":\"process-rotate\",\"6\":\"process-webp-dec\",\"7\":\"process-webp-enc\"}[chunkId]||chunkId) + \".\" + {\"0\":\"83216\",\"1\":\"86c34\",\"2\":\"aedd4\",\"3\":\"5c9e9\",\"4\":\"6c5bd\",\"5\":\"0847d\",\"6\":\"7bffc\",\"7\":\"ac9e0\"}[chunkId] + \".worker.js\");\n \t\t\t}\n \t\t}));\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","type ModuleFactory<M extends EmscriptenWasm.Module> = (\n  opts: EmscriptenWasm.ModuleOpts,\n) => M;\n\nexport function initEmscriptenModule<T extends EmscriptenWasm.Module>(\n  moduleFactory: ModuleFactory<T>,\n  wasmUrl: string,\n): Promise<T> {\n  return new Promise((resolve) => {\n    const module = moduleFactory({\n      // Just to be safe, don't automatically invoke any wasm functions\n      noInitialRun: true,\n      locateFile(url: string): string {\n        // Redirect the request for the wasm binary to whatever webpack gave us.\n        if (url.endsWith('.wasm')) return wasmUrl;\n        return url;\n      },\n      onRuntimeInitialized() {\n        // An Emscripten is a then-able that resolves with itself, causing an infite loop when you\n        // wrap it in a real promise. Delete the `then` prop solves this for now.\n        // https://github.com/kripken/emscripten/issues/5820\n        delete (module as any).then;\n        resolve(module);\n      },\n    });\n  });\n}\n\ninterface ClampOpts {\n  min?: number;\n  max?: number;\n}\n\nexport function clamp(x: number, opts: ClampOpts): number {\n  return Math.min(Math.max(x, opts.min || Number.MIN_VALUE), opts.max || Number.MAX_VALUE);\n}\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst TRANSFERABLE_TYPES = [\"ArrayBuffer\", \"MessagePort\", \"OffscreenCanvas\"]\n    .filter(f => f in self)\n    .map(f => self[f]);\nconst uid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\nconst proxyValueSymbol = Symbol(\"proxyValue\");\nconst throwSymbol = Symbol(\"throw\");\nconst proxyTransferHandler = {\n    canHandle: (obj) => obj && obj[proxyValueSymbol],\n    serialize: (obj) => {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return port2;\n    },\n    deserialize: (obj) => {\n        return proxy(obj);\n    }\n};\nconst throwTransferHandler = {\n    canHandle: (obj) => obj && obj[throwSymbol],\n    serialize: (obj) => {\n        const message = obj && obj.message;\n        const stack = obj && obj.stack;\n        return Object.assign({}, obj, { message, stack });\n    },\n    deserialize: (obj) => {\n        throw Object.assign(Error(), obj);\n    }\n};\nexport const transferHandlers = new Map([\n    [\"PROXY\", proxyTransferHandler],\n    [\"THROW\", throwTransferHandler]\n]);\nlet pingPongMessageCounter = 0;\nexport function proxy(endpoint, target) {\n    if (isWindow(endpoint))\n        endpoint = windowEndpoint(endpoint);\n    if (!isEndpoint(endpoint))\n        throw Error(\"endpoint does not have all of addEventListener, removeEventListener and postMessage defined\");\n    activateEndpoint(endpoint);\n    return cbProxy(async (irequest) => {\n        let args = [];\n        if (irequest.type === \"APPLY\" || irequest.type === \"CONSTRUCT\")\n            args = irequest.argumentsList.map(wrapValue);\n        const response = await pingPongMessage(endpoint, Object.assign({}, irequest, { argumentsList: args }), transferableProperties(args));\n        const result = response.data;\n        return unwrapValue(result.value);\n    }, [], target);\n}\nexport function proxyValue(obj) {\n    obj[proxyValueSymbol] = true;\n    return obj;\n}\nexport function expose(rootObj, endpoint) {\n    if (isWindow(endpoint))\n        endpoint = windowEndpoint(endpoint);\n    if (!isEndpoint(endpoint))\n        throw Error(\"endpoint does not have all of addEventListener, removeEventListener and postMessage defined\");\n    activateEndpoint(endpoint);\n    attachMessageHandler(endpoint, async function (event) {\n        if (!event.data.id || !event.data.callPath)\n            return;\n        const irequest = event.data;\n        let that = await irequest.callPath\n            .slice(0, -1)\n            .reduce((obj, propName) => obj[propName], rootObj);\n        let obj = await irequest.callPath.reduce((obj, propName) => obj[propName], rootObj);\n        let iresult = obj;\n        let args = [];\n        if (irequest.type === \"APPLY\" || irequest.type === \"CONSTRUCT\")\n            args = irequest.argumentsList.map(unwrapValue);\n        if (irequest.type === \"APPLY\") {\n            try {\n                iresult = await obj.apply(that, args);\n            }\n            catch (e) {\n                iresult = e;\n                iresult[throwSymbol] = true;\n            }\n        }\n        if (irequest.type === \"CONSTRUCT\") {\n            try {\n                iresult = new obj(...args); // eslint-disable-line new-cap\n                iresult = proxyValue(iresult);\n            }\n            catch (e) {\n                iresult = e;\n                iresult[throwSymbol] = true;\n            }\n        }\n        if (irequest.type === \"SET\") {\n            obj[irequest.property] = irequest.value;\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            iresult = true;\n        }\n        iresult = makeInvocationResult(iresult);\n        iresult.id = irequest.id;\n        return endpoint.postMessage(iresult, transferableProperties([iresult]));\n    });\n}\nfunction wrapValue(arg) {\n    // Is arg itself handled by a TransferHandler?\n    for (const [key, transferHandler] of transferHandlers) {\n        if (transferHandler.canHandle(arg)) {\n            return {\n                type: key,\n                value: transferHandler.serialize(arg)\n            };\n        }\n    }\n    // If not, traverse the entire object and find handled values.\n    let wrappedChildren = [];\n    for (const item of iterateAllProperties(arg)) {\n        for (const [key, transferHandler] of transferHandlers) {\n            if (transferHandler.canHandle(item.value)) {\n                wrappedChildren.push({\n                    path: item.path,\n                    wrappedValue: {\n                        type: key,\n                        value: transferHandler.serialize(item.value)\n                    }\n                });\n            }\n        }\n    }\n    for (const wrappedChild of wrappedChildren) {\n        const container = wrappedChild.path\n            .slice(0, -1)\n            .reduce((obj, key) => obj[key], arg);\n        container[wrappedChild.path[wrappedChild.path.length - 1]] = null;\n    }\n    return {\n        type: \"RAW\",\n        value: arg,\n        wrappedChildren\n    };\n}\nfunction unwrapValue(arg) {\n    if (transferHandlers.has(arg.type)) {\n        const transferHandler = transferHandlers.get(arg.type);\n        return transferHandler.deserialize(arg.value);\n    }\n    else if (isRawWrappedValue(arg)) {\n        for (const wrappedChildValue of arg.wrappedChildren || []) {\n            if (!transferHandlers.has(wrappedChildValue.wrappedValue.type))\n                throw Error(`Unknown value type \"${arg.type}\" at ${wrappedChildValue.path.join(\".\")}`);\n            const transferHandler = transferHandlers.get(wrappedChildValue.wrappedValue.type);\n            const newValue = transferHandler.deserialize(wrappedChildValue.wrappedValue.value);\n            replaceValueInObjectAtPath(arg.value, wrappedChildValue.path, newValue);\n        }\n        return arg.value;\n    }\n    else {\n        throw Error(`Unknown value type \"${arg.type}\"`);\n    }\n}\nfunction replaceValueInObjectAtPath(obj, path, newVal) {\n    const lastKey = path.slice(-1)[0];\n    const lastObj = path\n        .slice(0, -1)\n        .reduce((obj, key) => obj[key], obj);\n    lastObj[lastKey] = newVal;\n}\nfunction isRawWrappedValue(arg) {\n    return arg.type === \"RAW\";\n}\nfunction windowEndpoint(w) {\n    if (self.constructor.name !== \"Window\")\n        throw Error(\"self is not a window\");\n    return {\n        addEventListener: self.addEventListener.bind(self),\n        removeEventListener: self.removeEventListener.bind(self),\n        postMessage: (msg, transfer) => w.postMessage(msg, \"*\", transfer)\n    };\n}\nfunction isEndpoint(endpoint) {\n    return (\"addEventListener\" in endpoint &&\n        \"removeEventListener\" in endpoint &&\n        \"postMessage\" in endpoint);\n}\nfunction activateEndpoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.start();\n}\nfunction attachMessageHandler(endpoint, f) {\n    // Checking all possible types of `endpoint` manually satisfies TypeScript’s\n    // type checker. Not sure why the inference is failing here. Since it’s\n    // unnecessary code I’m going to resort to `any` for now.\n    // if(isWorker(endpoint))\n    //   endpoint.addEventListener('message', f);\n    // if(isMessagePort(endpoint))\n    //   endpoint.addEventListener('message', f);\n    // if(isOtherWindow(endpoint))\n    //   endpoint.addEventListener('message', f);\n    endpoint.addEventListener(\"message\", f);\n}\nfunction detachMessageHandler(endpoint, f) {\n    // Same as above.\n    endpoint.removeEventListener(\"message\", f);\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction isWindow(endpoint) {\n    // TODO: This doesn’t work on cross-origin iframes.\n    // return endpoint.constructor.name === 'Window';\n    return [\"window\", \"length\", \"location\", \"parent\", \"opener\"].every(prop => prop in endpoint);\n}\n/**\n * `pingPongMessage` sends a `postMessage` and waits for a reply. Replies are\n * identified by a unique id that is attached to the payload.\n */\nfunction pingPongMessage(endpoint, msg, transferables) {\n    const id = `${uid}-${pingPongMessageCounter++}`;\n    return new Promise(resolve => {\n        attachMessageHandler(endpoint, function handler(event) {\n            if (event.data.id !== id)\n                return;\n            detachMessageHandler(endpoint, handler);\n            resolve(event);\n        });\n        // Copy msg and add `id` property\n        msg = Object.assign({}, msg, { id });\n        endpoint.postMessage(msg, transferables);\n    });\n}\nfunction cbProxy(cb, callPath = [], target = function () { }) {\n    return new Proxy(target, {\n        construct(_target, argumentsList, proxy) {\n            return cb({\n                type: \"CONSTRUCT\",\n                callPath,\n                argumentsList\n            });\n        },\n        apply(_target, _thisArg, argumentsList) {\n            // We use `bind` as an indicator to have a remote function bound locally.\n            // The actual target for `bind()` is currently ignored.\n            if (callPath[callPath.length - 1] === \"bind\")\n                return cbProxy(cb, callPath.slice(0, -1));\n            return cb({\n                type: \"APPLY\",\n                callPath,\n                argumentsList\n            });\n        },\n        get(_target, property, proxy) {\n            if (property === \"then\" && callPath.length === 0) {\n                return { then: () => proxy };\n            }\n            else if (property === \"then\") {\n                const r = cb({\n                    type: \"GET\",\n                    callPath\n                });\n                return Promise.resolve(r).then.bind(r);\n            }\n            else {\n                return cbProxy(cb, callPath.concat(property), _target[property]);\n            }\n        },\n        set(_target, property, value, _proxy) {\n            return cb({\n                type: \"SET\",\n                callPath,\n                property,\n                value\n            });\n        }\n    });\n}\nfunction isTransferable(thing) {\n    return TRANSFERABLE_TYPES.some(type => thing instanceof type);\n}\nfunction* iterateAllProperties(value, path = [], visited = null) {\n    if (!value)\n        return;\n    if (!visited)\n        visited = new WeakSet();\n    if (visited.has(value))\n        return;\n    if (typeof value === \"string\")\n        return;\n    if (typeof value === \"object\")\n        visited.add(value);\n    if (ArrayBuffer.isView(value))\n        return;\n    yield { value, path };\n    const keys = Object.keys(value);\n    for (const key of keys)\n        yield* iterateAllProperties(value[key], [...path, key], visited);\n}\nfunction transferableProperties(obj) {\n    const r = [];\n    for (const prop of iterateAllProperties(obj)) {\n        if (isTransferable(prop.value))\n            r.push(prop.value);\n    }\n    return r;\n}\nfunction makeInvocationResult(obj) {\n    for (const [type, transferHandler] of transferHandlers) {\n        if (transferHandler.canHandle(obj)) {\n            const value = transferHandler.serialize(obj);\n            return {\n                value: { type, value }\n            };\n        }\n    }\n    return {\n        value: {\n            type: \"RAW\",\n            value: obj\n        }\n    };\n}\n","import { expose } from 'comlink';\nimport { isHqx } from '../resize/processor-meta';\nimport { clamp } from '../util';\nasync function mozjpegEncode(data, options) {\n    const { encode } = await import(\n    /* webpackChunkName: \"process-mozjpeg-enc\" */\n    '../mozjpeg/encoder');\n    return encode(data, options);\n}\nasync function quantize(data, opts) {\n    const { process } = await import(\n    /* webpackChunkName: \"process-imagequant\" */\n    '../imagequant/processor');\n    return process(data, opts);\n}\nasync function rotate(data, opts) {\n    const { rotate } = await import(\n    /* webpackChunkName: \"process-rotate\" */\n    '../rotate/processor');\n    return rotate(data, opts);\n}\nasync function resize(data, opts) {\n    if (isHqx(opts)) {\n        const { hqx } = await import(\n        /* webpackChunkName: \"process-hqx\" */\n        '../hqx/processor');\n        const widthRatio = opts.width / data.width;\n        const heightRatio = opts.height / data.height;\n        const ratio = Math.max(widthRatio, heightRatio);\n        if (ratio <= 1)\n            return data;\n        const factor = clamp(Math.ceil(ratio), { min: 2, max: 4 });\n        return hqx(data, { factor });\n    }\n    const { resize } = await import(\n    /* webpackChunkName: \"process-resize\" */\n    '../resize/processor');\n    return resize(data, opts);\n}\nasync function optiPngEncode(data, options) {\n    const { compress } = await import(\n    /* webpackChunkName: \"process-optipng\" */\n    '../optipng/encoder');\n    return compress(data, options);\n}\nasync function webpEncode(data, options) {\n    const { encode } = await import(\n    /* webpackChunkName: \"process-webp-enc\" */\n    '../webp/encoder');\n    return encode(data, options);\n}\nasync function webpDecode(data) {\n    const { decode } = await import(\n    /* webpackChunkName: \"process-webp-dec\" */\n    '../webp/decoder');\n    return decode(data);\n}\nconst exports = {\n    mozjpegEncode,\n    quantize,\n    rotate,\n    resize,\n    optiPngEncode,\n    webpEncode,\n    webpDecode,\n};\nexpose(exports, self);\n","type BrowserResizeMethods =\n  | 'browser-pixelated'\n  | 'browser-low'\n  | 'browser-medium'\n  | 'browser-high';\ntype WorkerResizeMethods =\n  | 'triangle'\n  | 'catrom'\n  | 'mitchell'\n  | 'lanczos3'\n  | 'hqx';\nconst workerResizeMethods: WorkerResizeMethods[] = [\n  'triangle',\n  'catrom',\n  'mitchell',\n  'lanczos3',\n  'hqx',\n];\n\nexport type ResizeOptions =\n  | BrowserResizeOptions\n  | WorkerResizeOptions\n  | VectorResizeOptions;\n\nexport interface ResizeOptionsCommon {\n  width: number;\n  height: number;\n  fitMethod: 'stretch' | 'contain';\n}\n\nexport interface BrowserResizeOptions extends ResizeOptionsCommon {\n  method: BrowserResizeMethods;\n}\n\nexport interface WorkerResizeOptions extends ResizeOptionsCommon {\n  method: WorkerResizeMethods;\n  premultiply: boolean;\n  linearRGB: boolean;\n}\n\nexport interface VectorResizeOptions extends ResizeOptionsCommon {\n  method: 'vector';\n}\n\n/**\n * Return whether a set of options are worker resize options.\n *\n * @param opts\n */\nexport function isWorkerOptions(\n  opts: ResizeOptions,\n): opts is WorkerResizeOptions {\n  return (workerResizeMethods as string[]).includes(opts.method);\n}\n\n/**\n * Return whether a set of options are from the HQ<n>X set\n *\n * @param opts\n */\nexport function isHqx(opts: ResizeOptions): opts is WorkerResizeOptions {\n  return opts.method === 'hqx';\n}\n\nexport const defaultOptions: ResizeOptions = {\n  // Width and height will always default to the image size.\n  // This is set elsewhere.\n  width: 1,\n  height: 1,\n  // This will be set to 'vector' if the input is SVG.\n  method: 'lanczos3',\n  fitMethod: 'stretch',\n  premultiply: true,\n  linearRGB: true,\n};\n"],"sourceRoot":""}