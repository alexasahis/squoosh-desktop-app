{"version":3,"sources":["webpack:///./src/codecs/hqx/processor.ts","webpack:///./codecs/hqx/pkg/squooshhqx_bg.wasm","webpack:///./codecs/hqx/pkg/squooshhqx.js"],"names":["__webpack_require__","r","__webpack_exports__","d","hqx","_codecs_hqx_pkg_squooshhqx_bg_wasm__WEBPACK_IMPORTED_MODULE_0__","_codecs_hqx_pkg_squooshhqx_bg_wasm__WEBPACK_IMPORTED_MODULE_0___default","n","ready","wasm_bindgen","a","async","data","opts","input","result","resize","Uint32Array","buffer","width","height","factor","ImageData","Uint8ClampedArray","module","exports","p","__exports","wasm","cachegetUint32Memory","getUint32Memory","memory","WASM_VECTOR_LEN","cachedGlobalArgumentPtr","input_image","input_width","input_height","ptr0","arg","ptr","__wbindgen_malloc","length","set","passArray32ToWasm","len0","retptr","__wbindgen_global_argument_ptr","mem","rustptr","rustlen","realRet","len","subarray","getArrayU32FromWasm","slice","__wbindgen_free","self","Object","assign","init","imports","URL","Request","response","fetch","WebAssembly","instantiateStreaming","catch","e","console","warn","then","arrayBuffer","bytes","instantiate","Instance","instance","__wbindgen_wasm_module"],"mappings":"uDAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,wBAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAL,EAAA,GAYA,MAAMQ,EAAQC,aAAaH,EAAAI,GAEpBC,eAAeP,EACpBQ,EACAC,GAEA,MAAMC,EAAQF,QACRJ,EACN,MAAMO,EAASN,aAAaO,OAC1B,IAAIC,YAAYH,EAAMF,KAAKM,QAC3BJ,EAAMK,MACNL,EAAMM,OACNP,EAAKQ,QAEP,OAAO,IAAIC,UACT,IAAIC,kBAAkBR,EAAOG,QAC7BN,EAAKO,MAAQN,EAAKQ,OAClBT,EAAKQ,OAASP,EAAKQ,4BC7BvBG,EAAAC,QAAiBzB,EAAA0B,EAAuB,6CCAxC,WACA,MAAAC,EAAA,GACA,IAAAC,EAEAC,EAAA,KACA,SAAAC,IAIA,OAHA,OAAAD,KAAAX,SAAAU,EAAAG,OAAAb,SACAW,EAAA,IAAAZ,YAAAW,EAAAG,OAAAb,SAEAW,EAGA,IAAAG,EAAA,EAaA,IAAAC,EAAA,KAcAN,EAAAX,OAAA,SAAAkB,EAAAC,EAAAC,EAAAf,GACA,MAAAgB,EA1BA,SAAAC,GACA,MAAAC,EAAAX,EAAAY,kBAAA,EAAAF,EAAAG,QAGA,OAFAX,IAAAY,IAAAJ,EAAAC,EAAA,GACAP,EAAAM,EAAAG,OACAF,EAsBAI,CAAAT,GACAU,EAAAZ,EACAa,GAfA,OAAAZ,IACAA,EAAAL,EAAAkB,kCAEAb,GAaAL,EAAAZ,OAAA6B,EAAAR,EAAAO,EAAAT,EAAAC,EAAAf,GACA,MAAA0B,EAAAjB,IACAkB,EAAAD,EAAAF,EAAA,GACAI,EAAAF,EAAAF,EAAA,KAEAK,EA3BA,SAAAX,EAAAY,GACA,OAAArB,IAAAsB,SAAAb,EAAA,EAAAA,EAAA,EAAAY,GA0BAE,CAAAL,EAAAC,GAAAK,QAEA,OADA1B,EAAA2B,gBAAAP,EAAA,EAAAC,GACAC,GA4CAM,KAAA/C,aAAAgD,OAAAC,OAxCA,SAAAC,EAAAnC,GAEA,IAAAT,EACA,MAAA6C,EAAA,GAEA,GAAApC,aAAAqC,KAAA,iBAAArC,gBAAAsC,QAAA,CAEA,MAAAC,EAAAC,MAAAxC,GAEAT,EADA,mBAAAkD,YAAAC,qBACAD,YAAAC,qBAAAH,EAAAH,GACAO,MAAAC,IACAC,QAAAC,KAAA,sNAAAF,GACAL,EACAQ,KAAAtE,KAAAuE,eACAD,KAAAE,GAAAR,YAAAS,YAAAD,EAAAb,MAGAG,EACAQ,KAAAtE,KAAAuE,eACAD,KAAAE,GAAAR,YAAAS,YAAAD,EAAAb,SAIA7C,EAAAkD,YAAAS,YAAAlD,EAAAoC,GACAW,KAAAxD,GACAA,aAAAkD,YAAAU,SACA,CAA4BC,SAAA7D,EAAAS,UAE5BT,GAIA,OAAAA,EAAAwD,KAAA,EAA6BK,WAAApD,aAC7BI,EAAAgD,EAAAnD,QACAkC,EAAAkB,uBAAArD,EAEAI,KAIAD,GA9FA","file":"process-hqx.83216.worker.js","sourcesContent":["import wasmUrl from '../../../codecs/hqx/pkg/squooshhqx_bg.wasm';\nimport '../../../codecs/hqx/pkg/squooshhqx';\nimport { HqxOptions } from './processor-meta';\n\ninterface WasmBindgenExports {\n  resize: typeof import('../../../codecs/hqx/pkg/squooshhqx').resize;\n}\n\ntype WasmBindgen = ((url: string) => Promise<void>) & WasmBindgenExports;\n\ndeclare var wasm_bindgen: WasmBindgen;\n\nconst ready = wasm_bindgen(wasmUrl);\n\nexport async function hqx(\n  data: ImageData,\n  opts: HqxOptions,\n): Promise<ImageData> {\n  const input = data;\n  await ready;\n  const result = wasm_bindgen.resize(\n    new Uint32Array(input.data.buffer),\n    input.width,\n    input.height,\n    opts.factor,\n  );\n  return new ImageData(\n    new Uint8ClampedArray(result.buffer),\n    data.width * opts.factor,\n    data.height * opts.factor,\n  );\n}\n","module.exports = __webpack_public_path__ + \"squooshhqx_bg.53714.wasm\";","(function() {\n    const __exports = {};\n    let wasm;\n\n    let cachegetUint32Memory = null;\n    function getUint32Memory() {\n        if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n            cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n        }\n        return cachegetUint32Memory;\n    }\n\n    let WASM_VECTOR_LEN = 0;\n\n    function passArray32ToWasm(arg) {\n        const ptr = wasm.__wbindgen_malloc(arg.length * 4);\n        getUint32Memory().set(arg, ptr / 4);\n        WASM_VECTOR_LEN = arg.length;\n        return ptr;\n    }\n\n    function getArrayU32FromWasm(ptr, len) {\n        return getUint32Memory().subarray(ptr / 4, ptr / 4 + len);\n    }\n\n    let cachedGlobalArgumentPtr = null;\n    function globalArgumentPtr() {\n        if (cachedGlobalArgumentPtr === null) {\n            cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n        }\n        return cachedGlobalArgumentPtr;\n    }\n    /**\n    * @param {Uint32Array} input_image\n    * @param {number} input_width\n    * @param {number} input_height\n    * @param {number} factor\n    * @returns {Uint32Array}\n    */\n    __exports.resize = function(input_image, input_width, input_height, factor) {\n        const ptr0 = passArray32ToWasm(input_image);\n        const len0 = WASM_VECTOR_LEN;\n        const retptr = globalArgumentPtr();\n        wasm.resize(retptr, ptr0, len0, input_width, input_height, factor);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getArrayU32FromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 4);\n        return realRet;\n\n    };\n\n    function init(module) {\n\n        let result;\n        const imports = {};\n\n        if (module instanceof URL || typeof module === 'string' || module instanceof Request) {\n\n            const response = fetch(module);\n            if (typeof WebAssembly.instantiateStreaming === 'function') {\n                result = WebAssembly.instantiateStreaming(response, imports)\n                .catch(e => {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                    return response\n                    .then(r => r.arrayBuffer())\n                    .then(bytes => WebAssembly.instantiate(bytes, imports));\n                });\n            } else {\n                result = response\n                .then(r => r.arrayBuffer())\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            }\n        } else {\n\n            result = WebAssembly.instantiate(module, imports)\n            .then(result => {\n                if (result instanceof WebAssembly.Instance) {\n                    return { instance: result, module };\n                } else {\n                    return result;\n                }\n            });\n        }\n        return result.then(({instance, module}) => {\n            wasm = instance.exports;\n            init.__wbindgen_wasm_module = module;\n\n            return wasm;\n        });\n    }\n\n    self.wasm_bindgen = Object.assign(init, __exports);\n\n})();\n\n\n/*** EXPORTS FROM exports-loader ***/\n"],"sourceRoot":""}