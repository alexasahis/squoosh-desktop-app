{"version":3,"sources":["webpack:///./src/codecs/mozjpeg/encoder.ts","webpack:///./codecs/mozjpeg_enc/mozjpeg_enc.js","webpack:///./codecs/mozjpeg_enc/mozjpeg_enc.wasm"],"names":["__webpack_require__","r","__webpack_exports__","d","encode","_codecs_mozjpeg_enc_mozjpeg_enc__WEBPACK_IMPORTED_MODULE_0__","_codecs_mozjpeg_enc_mozjpeg_enc__WEBPACK_IMPORTED_MODULE_0___default","n","_codecs_mozjpeg_enc_mozjpeg_enc_wasm__WEBPACK_IMPORTED_MODULE_1__","_codecs_mozjpeg_enc_mozjpeg_enc_wasm__WEBPACK_IMPORTED_MODULE_1___default","_util__WEBPACK_IMPORTED_MODULE_2__","emscriptenModule","async","data","options","Object","a","module","resultView","width","height","result","Uint8Array","free_result","buffer","mozjpeg_enc","_scriptDir","document","currentScript","src","undefined","key","Module","moduleOverrides","hasOwnProperty","status","toThrow","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","window","importScripts","nodeFS","nodePath","scriptDirectory","locateFile","path","__dirname","filename","binary","ret","e","Error","code","toString","assert","length","replace","slice","ex","ExitStatus","abort","read","f","readbuffer","scriptArgs","arguments","quit","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","title","out","console","log","bind","print","err","printErr","warn","STACK_ALIGN","staticAlloc","size","STATICTOP","alignMemory","factor","Math","ceil","asm2wasmImports","f64-rem","x","y","debugger","ABORT","Array","condition","text","getMemory","staticSealed","runtimeInitialized","_malloc","HEAP32","DYNAMICTOP_PTR","end","TOTAL_MEMORY","enlargeMemory","dynamicAlloc","Pointer_stringify","ptr","t","hasUtf","i","HEAPU8","curr","String","fromCharCode","apply","subarray","min","UTF8ToString","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","endPtr","decode","u0","u1","u2","u3","u4","str","ch","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","endIdx","u","charCodeAt","lengthBytesUTF8","len","HEAP8","HEAP16","HEAPU16","HEAPU32","HEAPF32","HEAPF64","STACK_BASE","STACKTOP","DYNAMIC_BASE","WASM_PAGE_SIZE","ASMJS_PAGE_SIZE","MIN_TOTAL_MEMORY","alignUp","multiple","updateGlobalBuffer","buf","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","PAGE_MULTIPLE","LIMIT","OLD_TOTAL_MEMORY","max","replacement","byteLength","oldHEAP8","ArrayBuffer","set","_emscripten_replace_memory","Function","prototype","call","getOwnPropertyDescriptor","get","TOTAL_STACK","callRuntimeCallbacks","callbacks","callback","shift","func","arg","WebAssembly","Memory","initial","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATEXIT__","__ATPOSTRUN__","addOnPreRun","cb","unshift","addOnPostRun","writeAsciiToMemory","dontAddNull","runDependencies","runDependencyWatcher","dependenciesFulfilled","dataURIPrefix","isDataURI","startsWith","wasmTextFile","wasmBinaryFile","asmjsCodeFile","info","global","env","asm2wasm","parent","exports","getBinary","doNativeWasm","providedBuffer","receiveInstance","instance","memory","newBuffer","oldBuffer","oldView","mergeMemory","id","clearInterval","removeRunDependency","NaN","Infinity","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","Promise","resolve","reject","credentials","then","catch","instantiate","reason","instantiateStreaming","asmjsReallocBuffer","finalMethod","oldSize","grow","wasmReallocBuffer","imports","fixImports","TABLE_SIZE","MAX_TABLE_SIZE","Table","maximum","element","integrateWasmJS","STATIC_BASE","push","__GLOBAL__sub_I_mozjpeg_enc_cpp","__GLOBAL__sub_I_bind_cpp","___emscripten_environ_constructor","ENV","SYSCALLS","varargs","getStr","get64","low","high","getZero","structRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","this","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","message","stack","create","constructor","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","forEach","type","unregisteredTypes","registered","dt","getShiftFromSize","TypeError","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","ignoreDuplicateRegistrations","emval_free_list","emval_handle_array","value","__emval_decref","handle","refcount","count_emval_handles","count","get_first_emval","__emval_register","_embind_repr","v","floatReadValueFromPointer","craftInvokerFunction","humanName","argTypes","classType","cppInvokerFunc","cppTargetFunc","argCount","isClassMethodFunc","needsDestructorStack","destructorFunction","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","obj","new_","exposePublicSymbol","numArguments","overloadTable","proto","methodName","prevFunc","ensureOverloadTable","embind__requireFunction","signature","rawFunction","fp","FUNCTION_TABLE","dc","dynCall","args","join","makeDynCaller","UnboundTypeError","getTypeName","___getTypeName","rv","_free","integerReadValueFromPointer","signed","__exit","implicit","initialStackTop","exit","PTHREAD_SPECIFIC","PTHREAD_SPECIFIC_NEXT_KEY","ERRNO_CODES","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","EWOULDBLOCK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EDEADLK","ENOLCK","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EDEADLOCK","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","ENOSYS","ENOTEMPTY","ENAMETOOLONG","ELOOP","EOPNOTSUPP","EPFNOSUPPORT","ECONNRESET","ENOBUFS","EAFNOSUPPORT","EPROTOTYPE","ENOTSOCK","ENOPROTOOPT","ESHUTDOWN","ECONNREFUSED","EADDRINUSE","ECONNABORTED","ENETUNREACH","ENETDOWN","ETIMEDOUT","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EALREADY","EDESTADDRREQ","EMSGSIZE","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EADDRNOTAVAIL","ENETRESET","EISCONN","ENOTCONN","ETOOMANYREFS","EUSERS","EDQUOT","ESTALE","ENOTSUP","ENOMEDIUM","EILSEQ","EOVERFLOW","ECANCELED","ENOTRECOVERABLE","EOWNERDEAD","ESTRPIPE","codes","embind_init_charCodes","asmGlobalArg","asmLibraryArg","getTotalMemory","abortOnCannotGrowMemory","___buildEnvironment","environ","poolPtr","envPtr","called","MAX_ENV_VALUES","strings","totalSize","line","___setErrNo","___syscall140","which","stream","getStreamFromFD","offset_low","whence","offset","FS","llseek","position","getdents","ErrnoError","errno","___syscall146","iov","iovcnt","buffers","printChar","j","___syscall6","close","__embind_finalize_value_object","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","map","field","getterReturnType","concat","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","write","o","fromWireType","toWireType","argPackAdvance","readValueFromPointer","__embind_register_bool","trueValue","falseValue","wt","heap","__embind_register_emval","__embind_register_float","__embind_register_function","rawArgTypesAddr","rawInvoker","fn","firstElement","array","heap32VectorToArray","types","unboundTypes","seen","visit","throwUnboundTypeError","invokerArgsArray","replacePublicSymbol","__embind_register_integer","primitiveType","minRange","maxRange","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","outPtr","stringToUTF8","charCode","__embind_register_std_wstring","charSize","getHeap","HEAP","start","__embind_register_value_object","constructorSignature","destructorSignature","__embind_register_value_object_field","getterSignature","setterSignature","__embind_register_void","isVoid","__emval_incref","__emval_take_value","argv","impl","requireRegisteredType","_abort","_emscripten_memcpy_big","dest","num","_exit","_getenv","allocateUTF8","_llvm_exp2_f64","pow","_pthread_getspecific","_pthread_key_create","destructor","_pthread_once","_pthread_setspecific","asm","run","doRun","postRun","preRun","setTimeout","what","JSON","stringify","old","runCaller","p"],"mappings":"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","file":"process-mozjpeg-enc.aedd4.worker.js","sourcesContent":["import mozjpeg_enc, { MozJPEGModule } from '../../../codecs/mozjpeg_enc/mozjpeg_enc';\nimport wasmUrl from '../../../codecs/mozjpeg_enc/mozjpeg_enc.wasm';\nimport { EncodeOptions } from './encoder-meta';\nimport { initEmscriptenModule } from '../util';\n\nlet emscriptenModule: Promise<MozJPEGModule>;\n\nexport async function encode(data: ImageData, options: EncodeOptions): Promise<ArrayBuffer> {\n  if (!emscriptenModule) emscriptenModule = initEmscriptenModule(mozjpeg_enc, wasmUrl);\n\n  const module = await emscriptenModule;\n  const resultView = module.encode(data.data, data.width, data.height, options);\n  const result = new Uint8Array(resultView);\n  module.free_result();\n\n  // wasm can’t run on SharedArrayBuffers, so we hard-cast to ArrayBuffer.\n  return result.buffer as ArrayBuffer;\n}\n","\nvar mozjpeg_enc = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(mozjpeg_enc) {\n  mozjpeg_enc = mozjpeg_enc || {};\n\nvar Module=typeof mozjpeg_enc!==\"undefined\"?mozjpeg_enc:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",abort);Module[\"quit\"]=(function(status){process[\"exit\"](status)});Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=(function(title){document.title=title})}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}var asm2wasmImports={\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})};var functionPointers=new Array(0);var GLOBAL_BASE=1024;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getMemory(size){if(!staticSealed)return staticAlloc(size);if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}if(!Module[\"reallocBuffer\"])Module[\"reallocBuffer\"]=(function(size){var ret;try{var oldHEAP8=HEAP8;ret=new ArrayBuffer(size);var temp=new Int8Array(ret);temp.set(oldHEAP8)}catch(e){return false}var success=_emscripten_replace_memory(ret);if(!success)return false;return ret});function enlargeMemory(){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module[\"reallocBuffer\"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile=\"mozjpeg_enc.wast\";var wasmBinaryFile=\"mozjpeg_enc.wasm\";var asmjsCodeFile=\"mozjpeg_enc.temp.asm.js\";if(!isDataURI(wasmTextFile)){wasmTextFile=locateFile(wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=locateFile(asmjsCodeFile)}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":asm2wasmImports,\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){err(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function fixImports(imports){return imports}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){err(\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;Module[\"usingWasm\"]=true;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource,(function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var asmjsReallocBuffer=Module[\"reallocBuffer\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;if(Module[\"usingWasm\"]){try{var result=Module[\"wasmMemory\"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}}});Module[\"reallocBuffer\"]=(function(size){if(finalMethod===\"asmjs\"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod=\"\";Module[\"asm\"]=(function(global,env,providedBuffer){env=fixImports(env);if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"memoryBase\"]){env[\"memoryBase\"]=Module[\"STATIC_BASE\"]}if(!env[\"tableBase\"]){env[\"tableBase\"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);assert(exports,\"no binaryen method succeeded.\");return exports})}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+90288;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_mozjpeg_enc_cpp()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})},{func:(function(){___emscripten_environ_constructor()})});var STATIC_BUMP=90288;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;STATICTOP+=16;var ENV={};function ___buildEnvironment(environ){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV[\"USER\"]=ENV[\"LOGNAME\"]=\"web_user\";ENV[\"PATH\"]=\"/\";ENV[\"PWD\"]=\"/\";ENV[\"HOME\"]=\"/home/web_user\";ENV[\"LANG\"]=\"C.UTF-8\";ENV[\"_\"]=Module[\"thisProgram\"];poolPtr=getMemory(TOTAL_ENV_SIZE);envPtr=getMemory(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[environ>>2]=envPtr}else{envPtr=HEAP32[environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in ENV){if(typeof ENV[key]===\"string\"){var line=key+\"=\"+ENV[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error(\"Environment size exceeded TOTAL_ENV_SIZE!\")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};var SYSCALLS={varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;if(!___syscall146.buffers){___syscall146.buffers=[null,[],[]];___syscall146.printChar=(function(stream,curr){var buffer=___syscall146.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}})}for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){___syscall146.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map((function(field){return field.getterReturnType})).concat(fieldRecords.map((function(field){return field.setterArgumentType})));whenDependentTypesAreResolved([structType],fieldTypes,(function(fieldTypes){var fields={};fieldRecords.forEach((function(field,i){var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:(function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))}),write:(function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)})}}));return[{name:reg.name,\"fromWireType\":(function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv}),\"toWireType\":(function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError(\"Missing field\")}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]}))}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"asm\"][\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"asm\"][\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,(function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)}),argCount-1);whenDependentTypesAreResolved([],argTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]}))}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(function(){return lengthBytesUTF8(value)})}else{getLength=(function(){return value.length})}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){Module[\"abort\"]()}function __exit(status){exit(status)}function _exit(status){__exit(status)}function _getenv(name){if(name===0)return 0;name=Pointer_stringify(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _llvm_exp2_f32(x){return Math.pow(2,x)}function _llvm_exp2_f64(){return _llvm_exp2_f32.apply(null,arguments)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;Module[\"wasmTableSize\"]=212;Module[\"wasmMaxTableSize\"]=212;Module.asmGlobalArg={};Module.asmLibraryArg={\"abort\":abort,\"enlargeMemory\":enlargeMemory,\"getTotalMemory\":getTotalMemory,\"abortOnCannotGrowMemory\":abortOnCannotGrowMemory,\"___buildEnvironment\":___buildEnvironment,\"___setErrNo\":___setErrNo,\"___syscall140\":___syscall140,\"___syscall146\":___syscall146,\"___syscall6\":___syscall6,\"__embind_finalize_value_object\":__embind_finalize_value_object,\"__embind_register_bool\":__embind_register_bool,\"__embind_register_emval\":__embind_register_emval,\"__embind_register_float\":__embind_register_float,\"__embind_register_function\":__embind_register_function,\"__embind_register_integer\":__embind_register_integer,\"__embind_register_memory_view\":__embind_register_memory_view,\"__embind_register_std_string\":__embind_register_std_string,\"__embind_register_std_wstring\":__embind_register_std_wstring,\"__embind_register_value_object\":__embind_register_value_object,\"__embind_register_value_object_field\":__embind_register_value_object_field,\"__embind_register_void\":__embind_register_void,\"__emval_decref\":__emval_decref,\"__emval_incref\":__emval_incref,\"__emval_take_value\":__emval_take_value,\"_abort\":_abort,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"_exit\":_exit,\"_getenv\":_getenv,\"_llvm_exp2_f64\":_llvm_exp2_f64,\"_pthread_getspecific\":_pthread_getspecific,\"_pthread_key_create\":_pthread_key_create,\"_pthread_once\":_pthread_once,\"_pthread_setspecific\":_pthread_setspecific,\"DYNAMICTOP_PTR\":DYNAMICTOP_PTR,\"STACKTOP\":STACKTOP};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_bind_cpp\"].apply(null,arguments)});var __GLOBAL__sub_I_mozjpeg_enc_cpp=Module[\"__GLOBAL__sub_I_mozjpeg_enc_cpp\"]=(function(){return Module[\"asm\"][\"__GLOBAL__sub_I_mozjpeg_enc_cpp\"].apply(null,arguments)});var ___emscripten_environ_constructor=Module[\"___emscripten_environ_constructor\"]=(function(){return Module[\"asm\"][\"___emscripten_environ_constructor\"].apply(null,arguments)});var ___errno_location=Module[\"___errno_location\"]=(function(){return Module[\"asm\"][\"___errno_location\"].apply(null,arguments)});var ___getTypeName=Module[\"___getTypeName\"]=(function(){return Module[\"asm\"][\"___getTypeName\"].apply(null,arguments)});var _emscripten_replace_memory=Module[\"_emscripten_replace_memory\"]=(function(){return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null,arguments)});var _free=Module[\"_free\"]=(function(){return Module[\"asm\"][\"_free\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"_malloc\"].apply(null,arguments)});var dynCall_i=Module[\"dynCall_i\"]=(function(){return Module[\"asm\"][\"dynCall_i\"].apply(null,arguments)});var dynCall_ii=Module[\"dynCall_ii\"]=(function(){return Module[\"asm\"][\"dynCall_ii\"].apply(null,arguments)});var dynCall_iii=Module[\"dynCall_iii\"]=(function(){return Module[\"asm\"][\"dynCall_iii\"].apply(null,arguments)});var dynCall_iiii=Module[\"dynCall_iiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiii\"].apply(null,arguments)});var dynCall_iiiii=Module[\"dynCall_iiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiii\"].apply(null,arguments)});var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiiii\"].apply(null,arguments)});var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_iiiiiii\"].apply(null,arguments)});var dynCall_v=Module[\"dynCall_v\"]=(function(){return Module[\"asm\"][\"dynCall_v\"].apply(null,arguments)});var dynCall_vi=Module[\"dynCall_vi\"]=(function(){return Module[\"asm\"][\"dynCall_vi\"].apply(null,arguments)});var dynCall_vii=Module[\"dynCall_vii\"]=(function(){return Module[\"asm\"][\"dynCall_vii\"].apply(null,arguments)});var dynCall_viii=Module[\"dynCall_viii\"]=(function(){return Module[\"asm\"][\"dynCall_viii\"].apply(null,arguments)});var dynCall_viiii=Module[\"dynCall_viiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiii\"].apply(null,arguments)});var dynCall_viiiii=Module[\"dynCall_viiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiii\"].apply(null,arguments)});var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null,arguments)});var dynCall_viiiiiii=Module[\"dynCall_viiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiii\"].apply(null,arguments)});var dynCall_viiiiiiii=Module[\"dynCall_viiiiiiii\"]=(function(){return Module[\"asm\"][\"dynCall_viiiiiiii\"].apply(null,arguments)});Module[\"asm\"]=asm;Module[\"then\"]=(function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=(function(){if(old)old();func(Module)})}return Module});function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&Module[\"noExitRuntime\"]&&status===0){return}if(Module[\"noExitRuntime\"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status)}Module[\"quit\"](status,new ExitStatus(status))}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run()\n\n\n\n\n\n  return mozjpeg_enc;\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n    module.exports = mozjpeg_enc;\n  else if (typeof define === 'function' && define['amd'])\n    define([], function() { return mozjpeg_enc; });\n  else if (typeof exports === 'object')\n    exports[\"mozjpeg_enc\"] = mozjpeg_enc;\n  \n\n/*** EXPORTS FROM exports-loader ***/\n","module.exports = __webpack_public_path__ + \"mozjpeg_enc.93395.wasm\";"],"sourceRoot":""}