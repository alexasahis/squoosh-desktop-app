{"version":3,"sources":["webpack:///./codecs/webp_enc/webp_enc.js","webpack:///./codecs/webp_enc/webp_enc.wasm","webpack:///./src/codecs/webp/encoder.ts"],"names":["webp_enc","_scriptDir","document","currentScript","src","undefined","key","Module","moduleOverrides","hasOwnProperty","status","toThrow","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","window","importScripts","nodeFS","nodePath","scriptDirectory","__dirname","filename","binary","ret","__webpack_require__","e","Error","code","toString","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","arguments","quit","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","title","out","console","log","bind","print","err","printErr","warn","STACK_ALIGN","alignMemory","size","factor","Math","ceil","asm2wasmImports","f64-rem","x","y","debugger","ABORT","Array","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","endPtr","subarray","decode","u0","u1","u2","u3","u4","str","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","STATICTOP","STACK_BASE","STACKTOP","DYNAMIC_BASE","DYNAMICTOP_PTR","MIN_TOTAL_MEMORY","alignUp","multiple","updateGlobalBuffer","buf","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","Function","prototype","call","Object","getOwnPropertyDescriptor","ArrayBuffer","get","byteLength","TOTAL_STACK","TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","func","arg","WebAssembly","Memory","initial","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","addOnPreRun","cb","unshift","addOnPostRun","runDependencies","runDependencyWatcher","dependenciesFulfilled","dataURIPrefix","isDataURI","startsWith","wasmBinaryFile","path","locateFile","info","global","env","asm2wasm","parent","exports","getBinary","createWasm","providedBuffer","receiveInstance","instance","module","memory","newBuffer","oldBuffer","oldView","set","mergeMemory","id","clearInterval","removeRunDependency","NaN","Infinity","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","Promise","resolve","reject","credentials","then","catch","instantiate","reason","instantiateStreaming","oldSize","grow","wasmReallocBuffer","TABLE_SIZE","MAX_TABLE_SIZE","Table","maximum","element","integrateWasmJS","STATIC_BASE","push","__GLOBAL__sub_I_webp_enc_cpp","__GLOBAL__sub_I_bind_cpp","__ZSt18uncaught_exceptionv","uncaught_exception","EXCEPTIONS","last","caught","infos","deAdjust","adjusted","adj","len","i","addRef","refcount","decRef","rethrown","destructor","___cxa_free_exception","clearRef","SYSCALLS","buffers","printChar","stream","curr","varargs","getStr","t","hasUtf","apply","min","Pointer_stringify","get64","low","high","getZero","structRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","this","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","charCodeAt","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","message","stack","create","constructor","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","forEach","type","unregisteredTypes","registered","dt","getShiftFromSize","TypeError","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","emval_free_list","emval_handle_array","value","__emval_decref","handle","count_emval_handles","count","get_first_emval","__emval_register","exposePublicSymbol","numArguments","overloadTable","proto","methodName","humanName","prevFunc","argCount","ensureOverloadTable","enumReadValueFromPointer","signed","heap","getTypeName","___getTypeName","rv","_free","requireRegisteredType","impl","_embind_repr","v","floatReadValueFromPointer","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","destructorFunction","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","obj","r","new_","embind__requireFunction","signature","rawFunction","fp","FUNCTION_TABLE","dc","dynCall","args","join","makeDynCaller","UnboundTypeError","integerReadValueFromPointer","PTHREAD_SPECIFIC","PTHREAD_SPECIFIC_NEXT_KEY","ERRNO_CODES","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","EWOULDBLOCK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EDEADLK","ENOLCK","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EDEADLOCK","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","ENOSYS","ENOTEMPTY","ENAMETOOLONG","ELOOP","EOPNOTSUPP","EPFNOSUPPORT","ECONNRESET","ENOBUFS","EAFNOSUPPORT","EPROTOTYPE","ENOTSOCK","ENOPROTOOPT","ESHUTDOWN","ECONNREFUSED","EADDRINUSE","ECONNABORTED","ENETUNREACH","ENETDOWN","ETIMEDOUT","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EALREADY","EDESTADDRREQ","EMSGSIZE","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EADDRNOTAVAIL","ENETRESET","EISCONN","ENOTCONN","ETOOMANYREFS","EUSERS","EDQUOT","ESTALE","ENOTSUP","ENOMEDIUM","EILSEQ","EOVERFLOW","ECANCELED","ENOTRECOVERABLE","EOWNERDEAD","ESTRPIPE","codes","embind_init_charCodes","staticAlloc","asmGlobalArg","asmLibraryArg","J","OLD_TOTAL_MEMORY","max","replacement","D","u","k","_malloc","j","p","which","getStreamFromFD","offset_low","result","whence","offset","FS","llseek","position","getdents","ErrnoError","errno","h","iov","iovcnt","o","close","I","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","map","field","getterReturnType","concat","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","write","fromWireType","toWireType","argPackAdvance","readValueFromPointer","H","trueValue","falseValue","wt","G","F","isSigned","ctor","values","E","rawEnumType","enumValue","enumType","Enum","Value","n","g","rawArgTypesAddr","rawInvoker","fn","firstElement","array","heap32VectorToArray","types","unboundTypes","seen","visit","throwUnboundTypeError","invokerArgsArray","replacePublicSymbol","primitiveType","minRange","maxRange","bitshift","isUnsignedType","d","dataTypeIndex","TA","decodeMemoryView","m","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","a","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","outPtr","maxBytesToWrite","outU8Array","outIdx","endIdx","stringToUTF8Array","stringToUTF8","charCode","C","charSize","getHeap","HEAP","start","B","constructorSignature","destructorSignature","getterSignature","setterSignature","A","isVoid","z","argv","l","w","dest","num","LN10","s","_pthread_once","q","b","asm","run","doRun","postRun","preRun","setTimeout","what","JSON","stringify","old","runCaller","__webpack_exports__","encode","_codecs_webp_enc_webp_enc__WEBPACK_IMPORTED_MODULE_0__","_codecs_webp_enc_webp_enc__WEBPACK_IMPORTED_MODULE_0___default","_codecs_webp_enc_webp_enc_wasm__WEBPACK_IMPORTED_MODULE_1__","_codecs_webp_enc_webp_enc_wasm__WEBPACK_IMPORTED_MODULE_1___default","_util__WEBPACK_IMPORTED_MODULE_2__","emscriptenModule","async","resultView","width","height","free_result"],"mappings":"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","file":"process-webp-enc.ac9e0.worker.js","sourcesContent":["\nvar webp_enc = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(webp_enc) {\n  webp_enc = webp_enc || {};\n\nvar Module=typeof webp_enc!==\"undefined\"?webp_enc:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",abort);Module[\"quit\"]=(function(status){process[\"exit\"](status)});Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=(function(title){document.title=title})}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;return Math.ceil(size/factor)*factor}var asm2wasmImports={\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})};var functionPointers=new Array(0);var GLOBAL_BASE=1024;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var WASM_PAGE_SIZE=65536;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}function enlargeMemory(){var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module[\"reallocBuffer\"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmBinaryFile=\"webp_enc.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":asm2wasmImports,\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){err(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function createWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){err(\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource,(function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=65536;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;try{var result=Module[\"wasmMemory\"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}});Module[\"reallocBuffer\"]=(function(size){return wasmReallocBuffer(size)});Module[\"asm\"]=(function(global,env,providedBuffer){if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"__memory_base\"]){env[\"__memory_base\"]=Module[\"STATIC_BASE\"]}if(!env[\"__table_base\"]){env[\"__table_base\"]=0}var exports=createWasm(global,env,providedBuffer);return exports})}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+37744;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_webp_enc_cpp()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})});var STATIC_BUMP=37744;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;STATICTOP+=16;function ___cxa_allocate_exception(size){return _malloc(size)}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\"}var SYSCALLS={buffers:[null,[],[]],printChar:(function(stream,curr){var buffer=SYSCALLS.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map((function(field){return field.getterReturnType})).concat(fieldRecords.map((function(field){return field.setterArgumentType})));whenDependentTypesAreResolved([structType],fieldTypes,(function(fieldTypes){var fields={};fieldRecords.forEach((function(field,i){var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:(function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))}),write:(function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)})}}));return[{name:reg.name,\"fromWireType\":(function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv}),\"toWireType\":(function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError(\"Missing field\")}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]}))}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function enumReadValueFromPointer(name,shift,signed){switch(shift){case 0:return(function(pointer){var heap=signed?HEAP8:HEAPU8;return this[\"fromWireType\"](heap[pointer])});case 1:return(function(pointer){var heap=signed?HEAP16:HEAPU16;return this[\"fromWireType\"](heap[pointer>>1])});case 2:return(function(pointer){var heap=signed?HEAP32:HEAPU32;return this[\"fromWireType\"](heap[pointer>>2])});default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_enum(rawType,name,size,isSigned){var shift=getShiftFromSize(size);name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":(function(c){return this.constructor.values[c]}),\"toWireType\":(function(destructors,c){return c.value}),\"argPackAdvance\":8,\"readValueFromPointer\":enumReadValueFromPointer(name,shift,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __embind_register_enum_value(rawEnumType,name,enumValue){var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(enumType.name+\"_\"+name,(function(){}))}});Enum.values[enumValue]=Value;Enum[name]=Value}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,(function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)}),argCount-1);whenDependentTypesAreResolved([],argTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]}))}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(function(){return lengthBytesUTF8(value)})}else{getLength=(function(){return value.length})}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){Module[\"abort\"]()}function _llvm_log10_f32(x){return Math.log(x)/Math.LN10}function _llvm_log10_f64(){return _llvm_log10_f32.apply(null,arguments)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;Module[\"wasmTableSize\"]=258;Module[\"wasmMaxTableSize\"]=258;Module.asmGlobalArg={};Module.asmLibraryArg={\"c\":abort,\"J\":enlargeMemory,\"D\":getTotalMemory,\"u\":abortOnCannotGrowMemory,\"k\":___cxa_allocate_exception,\"j\":___cxa_throw,\"i\":___setErrNo,\"p\":___syscall140,\"h\":___syscall146,\"o\":___syscall6,\"I\":__embind_finalize_value_object,\"H\":__embind_register_bool,\"G\":__embind_register_emval,\"F\":__embind_register_enum,\"E\":__embind_register_enum_value,\"n\":__embind_register_float,\"g\":__embind_register_function,\"e\":__embind_register_integer,\"d\":__embind_register_memory_view,\"m\":__embind_register_std_string,\"C\":__embind_register_std_wstring,\"B\":__embind_register_value_object,\"f\":__embind_register_value_object_field,\"A\":__embind_register_void,\"z\":__emval_decref,\"y\":__emval_incref,\"x\":__emval_take_value,\"l\":_abort,\"w\":_emscripten_memcpy_big,\"v\":_llvm_log10_f64,\"t\":_pthread_getspecific,\"s\":_pthread_key_create,\"r\":_pthread_once,\"q\":_pthread_setspecific,\"a\":DYNAMICTOP_PTR,\"b\":STACKTOP};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=(function(){return Module[\"asm\"][\"K\"].apply(null,arguments)});var __GLOBAL__sub_I_webp_enc_cpp=Module[\"__GLOBAL__sub_I_webp_enc_cpp\"]=(function(){return Module[\"asm\"][\"L\"].apply(null,arguments)});var ___errno_location=Module[\"___errno_location\"]=(function(){return Module[\"asm\"][\"M\"].apply(null,arguments)});var ___getTypeName=Module[\"___getTypeName\"]=(function(){return Module[\"asm\"][\"N\"].apply(null,arguments)});var _free=Module[\"_free\"]=(function(){return Module[\"asm\"][\"O\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"P\"].apply(null,arguments)});var dynCall_diiii=Module[\"dynCall_diiii\"]=(function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)});var dynCall_fii=Module[\"dynCall_fii\"]=(function(){return Module[\"asm\"][\"R\"].apply(null,arguments)});var dynCall_i=Module[\"dynCall_i\"]=(function(){return Module[\"asm\"][\"S\"].apply(null,arguments)});var dynCall_ii=Module[\"dynCall_ii\"]=(function(){return Module[\"asm\"][\"T\"].apply(null,arguments)});var dynCall_iii=Module[\"dynCall_iii\"]=(function(){return Module[\"asm\"][\"U\"].apply(null,arguments)});var dynCall_iiii=Module[\"dynCall_iiii\"]=(function(){return Module[\"asm\"][\"V\"].apply(null,arguments)});var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=(function(){return Module[\"asm\"][\"W\"].apply(null,arguments)});var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=(function(){return Module[\"asm\"][\"X\"].apply(null,arguments)});var dynCall_v=Module[\"dynCall_v\"]=(function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)});var dynCall_vi=Module[\"dynCall_vi\"]=(function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)});var dynCall_viif=Module[\"dynCall_viif\"]=(function(){return Module[\"asm\"][\"_\"].apply(null,arguments)});var dynCall_viii=Module[\"dynCall_viii\"]=(function(){return Module[\"asm\"][\"$\"].apply(null,arguments)});var dynCall_viiii=Module[\"dynCall_viiii\"]=(function(){return Module[\"asm\"][\"aa\"].apply(null,arguments)});var dynCall_viiiii=Module[\"dynCall_viiiii\"]=(function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)});var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=(function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)});var dynCall_viiiiiiiii=Module[\"dynCall_viiiiiiiii\"]=(function(){return Module[\"asm\"][\"da\"].apply(null,arguments)});Module[\"asm\"]=asm;Module[\"then\"]=(function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=(function(){if(old)old();func(Module)})}return Module});function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run()\n\n\n\n\n\n  return webp_enc;\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n    module.exports = webp_enc;\n  else if (typeof define === 'function' && define['amd'])\n    define([], function() { return webp_enc; });\n  else if (typeof exports === 'object')\n    exports[\"webp_enc\"] = webp_enc;\n  \n\n/*** EXPORTS FROM exports-loader ***/\n","module.exports = __webpack_public_path__ + \"webp_enc.ea665.wasm\";","import webp_enc, { WebPModule } from '../../../codecs/webp_enc/webp_enc';\nimport wasmUrl from '../../../codecs/webp_enc/webp_enc.wasm';\nimport { EncodeOptions } from './encoder-meta';\nimport { initEmscriptenModule } from '../util';\n\nlet emscriptenModule: Promise<WebPModule>;\n\nexport async function encode(data: ImageData, options: EncodeOptions): Promise<ArrayBuffer> {\n  if (!emscriptenModule) emscriptenModule = initEmscriptenModule(webp_enc, wasmUrl);\n\n  const module = await emscriptenModule;\n  const resultView = module.encode(data.data, data.width, data.height, options);\n  const result = new Uint8Array(resultView);\n  module.free_result();\n\n  // wasm can’t run on SharedArrayBuffers, so we hard-cast to ArrayBuffer.\n  return result.buffer as ArrayBuffer;\n}\n"],"sourceRoot":""}