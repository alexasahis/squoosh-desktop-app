self.webpackChunk([0],{20:function(n,e,t){"use strict";t.r(e),t.d(e,"hqx",function(){return r});var s=t(7),i=t.n(s);t(8);const a=wasm_bindgen(i.a);async function r(n,e){const t=n;await a;const s=wasm_bindgen.resize(new Uint32Array(t.data.buffer),t.width,t.height,e.factor);return new ImageData(new Uint8ClampedArray(s.buffer),n.width*e.factor,n.height*e.factor)}},7:function(n,e,t){n.exports=t.p+"squooshhqx_bg.53714.wasm"},8:function(n,e){!function(){const n={};let e,t=null;function s(){return null!==t&&t.buffer===e.memory.buffer||(t=new Uint32Array(e.memory.buffer)),t}let i=0;let a=null;n.resize=function(n,t,r,o){const c=function(n){const t=e.__wbindgen_malloc(4*n.length);return s().set(n,t/4),i=n.length,t}(n),u=i,l=(null===a&&(a=e.__wbindgen_global_argument_ptr()),a);e.resize(l,c,u,t,r,o);const f=s(),b=f[l/4],m=f[l/4+1],h=function(n,e){return s().subarray(n/4,n/4+e)}(b,m).slice();return e.__wbindgen_free(b,4*m),h},self.wasm_bindgen=Object.assign(function n(t){let s;const i={};if(t instanceof URL||"string"==typeof t||t instanceof Request){const n=fetch(t);s="function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(n,i).catch(e=>(console.warn("`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e),n.then(n=>n.arrayBuffer()).then(n=>WebAssembly.instantiate(n,i)))):n.then(n=>n.arrayBuffer()).then(n=>WebAssembly.instantiate(n,i))}else s=WebAssembly.instantiate(t,i).then(n=>n instanceof WebAssembly.Instance?{instance:n,module:t}:n);return s.then(({instance:t,module:s})=>(e=t.exports,n.__wbindgen_wasm_module=s,e))},n)}()}});
//# sourceMappingURL=process-hqx.83216.worker.js.map